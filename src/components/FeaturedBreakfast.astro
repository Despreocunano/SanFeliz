---
import type { FeaturedBreakfast } from '../lib/contentful';
import BreakfastCard from './BreakfastCard';

interface Props extends FeaturedBreakfast {}

const {
  title,
  description,
  price,
  image,
  features,
  badges,
  defaultBeverages = [],
  defaultCakes = []
} = Astro.props;

const imageUrl = `https:${image.fields.file.url}`;

// Prepare data for BreakfastCard
const mockBreakfast = {
  name: title,
  description,
  price,
  image: imageUrl,
  type: 'bowl' as const,
  beverages: defaultBeverages.map(b => b.fields),
  cakes: defaultCakes.map(c => c.fields),
  featured: true,
  features: features.map(f => f.text)
};
---

<section class="relative py-16 bg-gradient-to-b from-white to-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    {/* Desktop version */}
    <div class="hidden lg:block relative overflow-hidden bg-white rounded-3xl shadow-2xl">
      <div class="absolute top-0 right-0 -mt-4 -mr-4 w-40 h-40 bg-primary/10 rounded-full filter blur-3xl"></div>
      <div class="absolute bottom-0 left-0 -mb-4 -ml-4 w-40 h-40 bg-secondary/10 rounded-full filter blur-3xl"></div>

      <div class="grid lg:grid-cols-5 gap-8 p-8">
        {/* Content Section */}
        <div class="lg:col-span-3 flex flex-col justify-between p-4">
          <div class="space-y-6">
            <div>
              <h2 class="text-3xl md:text-4xl font-display font-bold text-dark">{title}</h2>
              <p class="mt-4 text-lg text-gray-600">
                {description}
              </p>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {features.map(feature => (
                <div class="flex items-start space-x-2">
                  <div class="flex-shrink-0 w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <span class="text-gray-700">{feature.text}</span>
                </div>
              ))}
            </div>

            <div class="bg-gradient-to-br from-gray-50 to-gray-100 p-6 rounded-xl space-y-4 border border-gray-100">
              <div class="flex justify-between items-center">
                <span class="text-lg font-semibold text-gray-700">Total:</span>
                <div class="text-right">
                  <span class="text-3xl font-bold text-primary">
                    {new Intl.NumberFormat('es-CL', { style: 'currency', currency: 'CLP', maximumFractionDigits: 0 }).format(price)}
                  </span>
                </div>
              </div>
              <p class="text-sm text-gray-600 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-yellow-500 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
                </svg>
                Oferta por tiempo limitado. Incluye entrega a domicilio.
              </p>
            </div>

            <div class="space-y-4">
              <a 
                href={`https://wa.me/+56967449210?text=¡Hola! Me interesa el ${title}. ¿Podrías darme más información?`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex w-full py-4 bg-green-500 hover:bg-green-600 text-white text-center font-semibold rounded-full transition-all duration-200 shadow-lg shadow-green-500/25 hover:shadow-xl hover:shadow-green-500/30 items-center justify-center"
                onclick="
                  const fbq = window.fbq;
                  if (typeof fbq === 'function') {
                    fbq('track', 'Purchase', {
                      content_name: document.querySelector('h2')?.textContent,
                      content_type: 'product',
                      content_ids: [document.querySelector('h2')?.textContent],
                      value: parseFloat(document.querySelector('.text-3xl')?.textContent?.replace(/[^0-9]/g, '') || '0'),
                      currency: 'CLP'
                    });
                  }
                "
              >
                <span>Pedir por WhatsApp</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12.04 2C6.58 2 2.13 6.45 2.13 11.91C2.13 13.66 2.59 15.36 3.45 16.86L2.05 22L7.3 20.62C8.75 21.41 10.38 21.83 12.04 21.83C17.5 21.83 21.95 17.38 21.95 11.92C21.95 9.27 20.92 6.78 19.05 4.91C17.18 3.04 14.69 2 12.04 2Z"/>
                </svg>
              </a>
              <button 
                onclick="document.getElementById('menu').scrollIntoView({behavior: 'smooth'})"
                class="block w-full py-4 bg-white hover:bg-gray-50 text-primary border-2 border-primary text-center font-semibold rounded-full transition-all duration-200"
              >
                Ver Más Opciones
              </button>
            </div>
          </div>
        </div>

        {/* Image Section */}
        <div class="lg:col-span-2 relative order-2">
          <div class="absolute inset-0 bg-gradient-to-br from-primary/20 to-secondary/20 rounded-2xl"></div>
          <img 
            src={imageUrl}
            alt={title}
            class="w-full h-[600px] object-cover rounded-2xl relative z-10"
          />
          <div class="absolute top-4 left-4 flex flex-wrap gap-2 z-20">
            {badges.map(badge => (
              <span class={`inline-flex items-center px-4 py-2 rounded-full bg-${badge.color} text-white font-semibold text-sm shadow-lg backdrop-blur-sm bg-opacity-90`}>
                {badge.text}
              </span>
            ))}
          </div>
        </div>
      </div>
    </div>

    {/* Mobile version using BreakfastCard */}
    <div class="lg:hidden">
      <BreakfastCard 
        {...mockBreakfast}
        client:load
      />
    </div>
  </div>
</section>

<script>
  // Track ViewContent when the component loads
  const fbq = window.fbq;
  if (typeof fbq === 'function') {
    fbq('track', 'ViewContent', {
      content_name: document.querySelector('h2')?.textContent || '',
      content_type: 'product',
      content_ids: [document.querySelector('h2')?.textContent || ''],
      value: parseFloat(document.querySelector('.text-3xl')?.textContent?.replace(/[^0-9]/g, '') || '0'),
      currency: 'CLP'
    });
  }
</script>